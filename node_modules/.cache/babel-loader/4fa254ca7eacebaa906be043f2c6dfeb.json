{"remainingRequest":"D:\\github\\JYmo\\node_modules\\thread-loader\\dist\\cjs.js!D:\\github\\JYmo\\node_modules\\babel-loader\\lib\\index.js!D:\\github\\JYmo\\src\\router\\index.js","dependencies":[{"path":"D:\\github\\JYmo\\src\\router\\index.js","mtime":1591578397806},{"path":"D:\\github\\JYmo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591578380659},{"path":"D:\\github\\JYmo\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1591578394919},{"path":"D:\\github\\JYmo\\node_modules\\babel-loader\\lib\\index.js","mtime":1591578378266}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}