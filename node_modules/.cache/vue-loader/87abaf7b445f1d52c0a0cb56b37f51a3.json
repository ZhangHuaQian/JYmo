{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\caiji\\广西警察学院\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\caiji\\广西警察学院\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\caiji\\广西警察学院\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\caiji\\广西警察学院\\src\\layout\\components\\main\\components\\NavMenu.vue?vue&type=template&id=37eab9bc&scoped=true&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\caiji\\广西警察学院\\src\\layout\\components\\main\\components\\NavMenu.vue","mtime":1591342413028},{"path":"C:\\Users\\lenovo\\Desktop\\caiji\\广西警察学院\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\caiji\\广西警察学院\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\caiji\\广西警察学院\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\caiji\\广西警察学院\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}