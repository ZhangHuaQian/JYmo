{"remainingRequest":"D:\\github\\JYmo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\github\\JYmo\\src\\views\\collegeHome\\index.vue?vue&type=template&id=69dbf16f&scoped=true&","dependencies":[{"path":"D:\\github\\JYmo\\src\\views\\collegeHome\\index.vue","mtime":1592201825978},{"path":"D:\\github\\JYmo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591696415167},{"path":"D:\\github\\JYmo\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1591696427902},{"path":"D:\\github\\JYmo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591696415167},{"path":"D:\\github\\JYmo\\node_modules\\vue-loader\\lib\\index.js","mtime":1591696427902}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}